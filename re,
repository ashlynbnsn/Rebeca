<!DOCTYPE html>
<html>
  <head>
    <title>Rubik'
      body { margin: 0; }
    </style>
  </head>

      const cubeGeometry = new THREE.BoxGeometry(cubeSiz      const materials = [
        new THREE.MeshBasicMaterial({ color: 0xff0000 }), // Пере
        new THREE.MeshBasicMaterial({ color: 0x0000ff }),
        new THREE.MeshBasicMaterial({ color: 0xff00ff }), // Левая грань
        new THREE.MeshBasicMaterial({ color: 0x00ffff })  // Правая грань
      ];

      const cube = new THREE.Mesh(cubeGeometry, materials);
      scene.add(cube);

      camera.position.z = 5;

      // Основной цикл анимации
      const animate = () => {
        requestAnimationFrame(animate);
      const cube = new THREE.Mesh(cubeGeometry, materials);
        // Вращение Rubik's Cube
        cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;

        render      const cube = new THREE.Mesh(cubeGeometry, materials);er.render(scene, camera);
      };

      animate();
сновной цикл анимации
      const animate = () => {
        requestAnimationFrame(animate);
      const cube = new THREE.Mesh(cubeGeometry, materials);
        // Вращение Rubik's Cube
        cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;
сновной цикл анимации
      const animate = () => {
        requestAnimationFrame(animate);
      const cube = new THREE.Mesh(cubeGeometry, materials);
        // Вращение Rubik's Cube

