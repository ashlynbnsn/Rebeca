<!DOCTYPE html>
<html>
  <head>
    <title>Rubik's Cube Simulator</title>
    <style>
      body { margin: 0; }
    </style>
  </head>
  <body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/110/three.min.js"></script>
    <script>
      // Инициализация сцены
      const scene = new THREE.Scene();
      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
      const renderer = new THREE.WebGLRenderer();
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.body.appendChild(renderer.domElement);

      // Создание Rubik's Cube
      const cubeSize = 1;
      const cubeGeometry = new THREE.BoxGeometry(cubeSize, cubeSize, cubeSize);

      // Используем разные цвета для каждой грани куба
      const materials = [
        new THREE.MeshBasicMaterial({ color: 0xff0000 }), // Передняя грань
        new THREE.MeshBasicMaterial({ color: 0x00ff00 }), // Задняя грань
        new THREE.MeshBasicMaterial({ color: 0x0000ff }), // Верхняя грань
        new THREE.MeshBasicMaterial({ color: 0xffff00 }), // Нижняя грань
        new THREE.MeshBasicMaterial({ color: 0xff00ff }), // Левая грань
        new THREE.MeshBasicMaterial({ color: 0x00ffff })  // Правая грань
      ];

      const cube = new THREE.Mesh(cubeGeometry, materials);
      scene.add(cube);

      camera.position.z = 5;

      // Основной цикл анимации
      const animate = () => {
        requestAnimationFrame(animate);
      const cube = new THREE.Mesh(cubeGeometry, materials);
        // Вращение Rubik's Cube
        cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;

        render      const cube = new THREE.Mesh(cubeGeometry, materials);er.render(scene, camera);
      };

      animate();
01100011001110001000101011000  </body>
</html>
